diff --git a/http.c b/http.c
index 4d4b009..db0c1b3 100644
--- a/http.c
+++ b/http.c
@@ -27,10 +27,10 @@ void touch(const char *name) {
         close(fd);
 }
 
-int http_read_line(int fd, char *buf)
+int http_read_line(int fd, char *buf, size_t buf_len)
 {
    size_t i = 0;
-    for (;;)
+    for (;i < buf_len;)
     {
         int cc = read(fd, &buf[i], 1);
         if (cc <= 0)
@@ -51,10 +51,13 @@ int http_read_line(int fd, char *buf)
         i++;
     }
 
+    if (buf_len == i)
+      return 0;
+
     return -1;
 }
 
-const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *env, size_t *env_len)
+const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *env, size_t *env_len, size_t env_max_size)
 {
     char buf[4096];
     char *sp1, *sp2, *qp, *envp = env;
@@ -62,7 +65,7 @@ const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *e
     /* For lab 2: don't remove this line. */
     touch("http_request_line");
 
-    if (http_read_line(fd, buf) < 0)
+    if (http_read_line(fd, buf, sizeof(buf)) < 0)
         return "Socket IO error";
 
     /* Parse request like "GET /foo.html HTTP/1.0" */
@@ -84,8 +87,10 @@ const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *e
     if (strcmp(buf, "GET") && strcmp(buf, "POST"))
         return "Unsupported request (not GET or POST)";
 
-    envp += sprintf(envp, "REQUEST_METHOD=%s", buf) + 1;
-    envp += sprintf(envp, "SERVER_PROTOCOL=%s", sp2) + 1;
+    envp += snprintf(envp, env_max_size, "REQUEST_METHOD=%s", buf) + 1;
+
+    if ((size_t)( envp - env ) )
+    envp += snprintf(envp, env_max_size - (envp - env), "SERVER_PROTOCOL=%s", sp2) + 1;
 
     /* parse out query string, e.g. "foo.py?user=bob" */
     if ((qp = strchr(sp1, '?')))
@@ -118,7 +123,7 @@ const char *http_request_headers(int fd)
     /* Now parse HTTP headers */
     for (;;)
     {
-        if (http_read_line(fd, buf) < 0)
+        if (http_read_line(fd, buf, sizeof(buf)) < 0)
             return "Socket IO error";
 
         if (buf[0] == '\0')     /* end of headers */
@@ -271,7 +276,7 @@ void http_serve(int fd, const char *name)
     getcwd(pn, sizeof(pn));
     setenv("DOCUMENT_ROOT", pn, 1);
 
-    strcat(pn, name);
+    strncat(pn, name, sizeof(pn) - strlen(name) - 1);
     split_path(pn);
 
     if (!stat(pn, &st))
@@ -301,7 +306,8 @@ void http_serve_file(int fd, const char *pn)
     if (getenv("PATH_INFO")) {
         /* only attempt PATH_INFO on dynamic resources */
         char buf[1024];
-        sprintf(buf, "%s%s", pn, getenv("PATH_INFO"));
+        char * path = getenv("PATH_INFO");
+        snprintf(buf, sizeof(buf), "%s%s", pn, path);
         http_serve_none(fd, buf);
         return;
     }
@@ -394,7 +400,7 @@ void http_serve_executable(int fd, const char *pn)
     default:
         close(pipefd[1]); /* write end */
         while (1) {
-            if (http_read_line(pipefd[0], buf) < 0) {
+            if (http_read_line(pipefd[0], buf, sizeof(buf)) < 0) {
                 http_err(fd, 500, "Premature end of script headers");
                 close(pipefd[0]);
                 return;
@@ -471,8 +477,8 @@ void url_decode(char *dst, const char *src, int dst_size)
 void env_deserialize(char *env, size_t len)
 {
     char *envp = (env + len - 1);
-    envp += sprintf(envp, "GATEWAY_INTERFACE=CGI/1.1") + 1;
-    envp += sprintf(envp, "REDIRECT_STATUS=200") + 1;
+    envp += snprintf(envp, len ,"GATEWAY_INTERFACE=CGI/1.1") + 1;
+    envp += snprintf(envp, len - strlen("REDIRECT_STATUS=200") - 1, "REDIRECT_STATUS=200") + 1;
     *envp = 0;
     len = envp - env + 1;
 
diff --git a/http.h b/http.h
index e28aca2..4a9e150 100644
--- a/http.h
+++ b/http.h
@@ -5,7 +5,7 @@
 #include <sys/types.h>
 #include <stddef.h>
 
-const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *env, size_t *env_len);
+const char *http_request_line(int fd, char *reqpath, size_t reqpath_len, char *env, size_t *env_len, size_t env_max_size);
 
 const char *http_request_headers(int fd);
 
diff --git a/zookd.c b/zookd.c
index 644a1a1..8dbd824 100644
--- a/zookd.c
+++ b/zookd.c
@@ -68,7 +68,7 @@ static void process_client(int fd)
     int i;
 
     /* get the request line */
-    if ((errmsg = http_request_line(fd, reqpath, sizeof(reqpath), env, &env_len)))
+    if ((errmsg = http_request_line(fd, reqpath, sizeof(reqpath), env, &env_len, sizeof(env))))
         return http_err(fd, 500, "http_request_line: %s", errmsg);
 
     for (i = 0; i < nsvcs; ++i)
